// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   MenuFactory.java

package com.zbluesoftware.fsxp.menu;

import com.zbluesoftware.fsxp.engine.SettingsEngine;
import com.zbluesoftware.fsxp.event.MenuActionListener;
import com.zbluesoftware.fsxp.graphics.IconFactory;
import com.zbluesoftware.fsxp.simconnect.FSXConnection;
import com.zbluesoftware.fsxp.util.Utilities;
import java.util.HashMap;
import javax.swing.JMenu;
import javax.swing.KeyStroke;

// Referenced classes of package com.zbluesoftware.fsxp.menu:
//            MenuAction, FSXPMenuBar

public class MenuFactory
{

    private MenuFactory()
    {
        menuHM = new HashMap();
        menuItemHM = new HashMap();
    }

    public static MenuFactory getInstance()
    {
        if(menuFactory == null)
            menuFactory = new MenuFactory();
        return menuFactory;
    }

    public HashMap getMenuHashMap()
    {
        return menuHM;
    }

    public HashMap getMenuItemHashMap()
    {
        return menuItemHM;
    }

    public MenuAction getMenuAction(Integer id)
    {
        return (MenuAction)menuItemHM.get(id);
    }

    public JMenu getMenu(Integer id)
    {
        return (JMenu)menuHM.get(id);
    }

    public FSXPMenuBar initializeMenus(MenuActionListener listener)
    {
        this.listener = listener;
        createMenus();
        return FSXPMenuBar.getInstance();
    }

    public void createMenus()
    {
        if(listener == null)
        {
            return;
        } else
        {
            FSXPMenuBar fsxpMenuBar = FSXPMenuBar.getInstance();
            int acceleratorKey = 2;
            boolean useSeparator = false;
            MenuAction newAction = new MenuAction("New Airport", null);
            newAction.putValue("ActionCommandKey", "1");
            newAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(78, 2, false));
            newAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", newAction);
            menuItemHM.put(new Integer(1), newAction);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction findAirportAction = new MenuAction("Find Airport...", null);
            findAirportAction.putValue("ActionCommandKey", "2");
            findAirportAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(70, 2, false));
            findAirportAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", findAirportAction);
            menuItemHM.put(new Integer(2), findAirportAction);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction openBGLAction = new MenuAction("Open Airport BGL...", null);
            openBGLAction.putValue("ActionCommandKey", "4");
            openBGLAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(79, 3, false));
            openBGLAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", openBGLAction);
            menuItemHM.put(new Integer(4), openBGLAction);
            MenuAction openAction = new MenuAction("Open Airport XML...", null);
            openAction.putValue("ActionCommandKey", "3");
            openAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(79, 2, false));
            openAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", openAction);
            menuItemHM.put(new Integer(3), openAction);
            JMenu openRecentMenu = new JMenu("Open Recent Airport XML");
            openRecentMenu.setFont(Utilities.MENU_FONT);
            fsxpMenuBar.addMenuItem("File", openRecentMenu);
            menuHM.put(new Integer(5), openRecentMenu);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction saveAction = new MenuAction("Save Airport XML", null);
            saveAction.putValue("ActionCommandKey", "6");
            saveAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(83, 2, false));
            saveAction.addMenuListener(listener);
            saveAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("File", saveAction);
            menuItemHM.put(new Integer(6), saveAction);
            MenuAction saveAsAction = new MenuAction("Save Airport XML As...", null);
            saveAsAction.putValue("ActionCommandKey", "7");
            saveAsAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(83, 3, false));
            saveAsAction.addMenuListener(listener);
            saveAsAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("File", saveAsAction);
            menuItemHM.put(new Integer(7), saveAsAction);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction closeAction = new MenuAction("Close Airport", null);
            closeAction.putValue("ActionCommandKey", "8");
            closeAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(87, 2, false));
            closeAction.addMenuListener(listener);
            closeAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("File", closeAction);
            menuItemHM.put(new Integer(8), closeAction);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction jpgAction = new MenuAction("Create Airport JPEG", null);
            jpgAction.putValue("ActionCommandKey", "9");
            jpgAction.addMenuListener(listener);
            jpgAction.setEnabled(false);
            menuItemHM.put(new Integer(9), jpgAction);
            MenuAction printAction = new MenuAction("Print Airport...", null);
            printAction.putValue("ActionCommandKey", "10");
            printAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(80, 2, false));
            printAction.addMenuListener(listener);
            printAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("File", printAction);
            menuItemHM.put(new Integer(10), printAction);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction newSAction = new MenuAction("New Scenery", null);
            newSAction.putValue("ActionCommandKey", "11");
            newSAction.addMenuListener(listener);
            newSAction.setEnabled(false);
            menuItemHM.put(new Integer(11), newSAction);
            MenuAction openSAction = new MenuAction("Open Scenery XML...", null);
            openSAction.putValue("ActionCommandKey", "12");
            openSAction.addMenuListener(listener);
            openSAction.setEnabled(false);
            menuItemHM.put(new Integer(12), openSAction);
            MenuAction saveSAction = new MenuAction("Save Scenery XML", null);
            saveSAction.putValue("ActionCommandKey", "13");
            saveSAction.addMenuListener(listener);
            saveSAction.setEnabled(false);
            menuItemHM.put(new Integer(13), saveSAction);
            MenuAction saveSAsAction = new MenuAction("Save Scenery XML As...", null);
            saveSAsAction.putValue("ActionCommandKey", "14");
            saveSAsAction.addMenuListener(listener);
            saveSAsAction.setEnabled(false);
            menuItemHM.put(new Integer(14), saveSAsAction);
            MenuAction prefsAction = new MenuAction("Preferences...", null);
            prefsAction.putValue("ActionCommandKey", "15");
            prefsAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", prefsAction);
            menuItemHM.put(new Integer(15), prefsAction);
            MenuAction updateAction = new MenuAction("Check For Updates...", null);
            updateAction.putValue("ActionCommandKey", "16");
            updateAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", updateAction);
            menuItemHM.put(new Integer(16), updateAction);
            fsxpMenuBar.addMenuSeparator("File");
            MenuAction exitAction = new MenuAction("Exit", null);
            exitAction.putValue("ActionCommandKey", "17");
            exitAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("File", exitAction);
            menuItemHM.put(new Integer(17), exitAction);
            MenuAction undoAction = new MenuAction("Undo", null);
            undoAction.putValue("ActionCommandKey", "18");
            undoAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(90, 2, false));
            undoAction.addMenuListener(listener);
            undoAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", undoAction);
            menuItemHM.put(new Integer(18), undoAction);
            MenuAction redoAction = new MenuAction("Redo", null);
            redoAction.putValue("ActionCommandKey", "19");
            redoAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(90, 3, false));
            redoAction.addMenuListener(listener);
            redoAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", redoAction);
            menuItemHM.put(new Integer(19), redoAction);
            MenuAction historyAction = new MenuAction("Display History", null);
            historyAction.putValue("ActionCommandKey", "20");
            historyAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(72, 2, false));
            historyAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Edit", historyAction);
            menuItemHM.put(new Integer(20), historyAction);
            fsxpMenuBar.addMenuSeparator("Edit");
            MenuAction cutAction = new MenuAction("Cut", null);
            cutAction.putValue("ActionCommandKey", "21");
            cutAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(88, 2, false));
            cutAction.addMenuListener(listener);
            cutAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", cutAction);
            menuItemHM.put(new Integer(21), cutAction);
            MenuAction copyAction = new MenuAction("Copy", null);
            copyAction.putValue("ActionCommandKey", "22");
            copyAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(67, 2, false));
            copyAction.addMenuListener(listener);
            copyAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", copyAction);
            menuItemHM.put(new Integer(22), copyAction);
            MenuAction pasteAction = new MenuAction("Paste", null);
            pasteAction.putValue("ActionCommandKey", "23");
            pasteAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(86, 2, false));
            pasteAction.addMenuListener(listener);
            pasteAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", pasteAction);
            menuItemHM.put(new Integer(23), pasteAction);
            fsxpMenuBar.addMenuSeparator("Edit");
            MenuAction centerAction = new MenuAction("Return To Center", null);
            centerAction.putValue("ActionCommandKey", "24");
            centerAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(82, 2, false));
            centerAction.addMenuListener(listener);
            centerAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", centerAction);
            menuItemHM.put(new Integer(24), centerAction);
            MenuAction findPointAction = new MenuAction("Find Taxiway Point...", null);
            findPointAction.putValue("ActionCommandKey", "25");
            findPointAction.addMenuListener(listener);
            findPointAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", findPointAction);
            menuItemHM.put(new Integer(25), findPointAction);
            MenuAction manageBGAction = new MenuAction("Manage Background Images...", null);
            manageBGAction.putValue("ActionCommandKey", "26");
            manageBGAction.addMenuListener(listener);
            manageBGAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", manageBGAction);
            menuItemHM.put(new Integer(26), manageBGAction);
            MenuAction lockingAction = new MenuAction("Object Locking...", null);
            lockingAction.putValue("ActionCommandKey", "27");
            lockingAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Edit", lockingAction);
            menuItemHM.put(new Integer(27), lockingAction);
            MenuAction countsAction = new MenuAction("Display Counts...", null);
            countsAction.putValue("ActionCommandKey", "28");
            countsAction.addMenuListener(listener);
            countsAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", countsAction);
            menuItemHM.put(new Integer(28), countsAction);
            fsxpMenuBar.addMenuSeparator("Edit");
            MenuAction taxiNameAction = new MenuAction("Taxiway Names", null);
            taxiNameAction.putValue("ActionCommandKey", "29");
            taxiNameAction.addMenuListener(listener);
            taxiNameAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", taxiNameAction);
            menuItemHM.put(new Integer(29), taxiNameAction);
            MenuAction servicesAction = new MenuAction("Airport Services", null);
            servicesAction.putValue("ActionCommandKey", "30");
            servicesAction.addMenuListener(listener);
            servicesAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", servicesAction);
            menuItemHM.put(new Integer(30), servicesAction);
            fsxpMenuBar.addMenuSeparator("Edit");
            MenuAction moveAirportAction = new MenuAction("Move Airport...", null);
            moveAirportAction.putValue("ActionCommandKey", "31");
            moveAirportAction.addMenuListener(listener);
            moveAirportAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Edit", moveAirportAction);
            menuItemHM.put(new Integer(31), moveAirportAction);
            MenuAction dispRunwayAction = new MenuAction("Show Runways", null);
            dispRunwayAction.putValue("ActionCommandKey", "32");
            dispRunwayAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(82, 3, false));
            dispRunwayAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispRunwayAction, SettingsEngine.getInstance().getDisplayRunway());
            menuItemHM.put(new Integer(32), dispRunwayAction);
            MenuAction dispILSAction = new MenuAction("Show ILS Beams", null);
            dispILSAction.putValue("ActionCommandKey", "33");
            dispILSAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(73, 3, false));
            dispILSAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispILSAction, SettingsEngine.getInstance().getDisplayILS());
            menuItemHM.put(new Integer(33), dispILSAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction runwayTPAction = new MenuAction("Show Runway Paths", null);
            runwayTPAction.putValue("ActionCommandKey", "40");
            runwayTPAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", runwayTPAction, SettingsEngine.getInstance().getShowRunwayPaths());
            menuItemHM.put(new Integer(40), runwayTPAction);
            MenuAction parkingTPAction = new MenuAction("Show Parking Paths", null);
            parkingTPAction.putValue("ActionCommandKey", "41");
            parkingTPAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", parkingTPAction, SettingsEngine.getInstance().getShowParkingPaths());
            menuItemHM.put(new Integer(41), parkingTPAction);
            MenuAction taxiTPAction = new MenuAction("Show Taxi Paths", null);
            taxiTPAction.putValue("ActionCommandKey", "42");
            taxiTPAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", taxiTPAction, SettingsEngine.getInstance().getShowTaxiPaths());
            menuItemHM.put(new Integer(42), taxiTPAction);
            MenuAction pathTPAction = new MenuAction("Show Path Paths", null);
            pathTPAction.putValue("ActionCommandKey", "43");
            pathTPAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", pathTPAction, SettingsEngine.getInstance().getShowPathPaths());
            menuItemHM.put(new Integer(43), pathTPAction);
            MenuAction closedTPAction = new MenuAction("Show Closed Paths", null);
            closedTPAction.putValue("ActionCommandKey", "44");
            closedTPAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", closedTPAction, SettingsEngine.getInstance().getShowClosedPaths());
            menuItemHM.put(new Integer(44), closedTPAction);
            MenuAction vehicleTPAction = new MenuAction("Show Vehicle Paths", null);
            vehicleTPAction.putValue("ActionCommandKey", "45");
            vehicleTPAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", vehicleTPAction, SettingsEngine.getInstance().getShowVehiclePaths());
            menuItemHM.put(new Integer(45), vehicleTPAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction dispTaxiPointAction = new MenuAction("Show Taxiway Points", null);
            dispTaxiPointAction.putValue("ActionCommandKey", "36");
            dispTaxiPointAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispTaxiPointAction, SettingsEngine.getInstance().getDisplayTWPoint());
            menuItemHM.put(new Integer(36), dispTaxiPointAction);
            MenuAction dispTaxiSignAction = new MenuAction("Show Taxiway Signs", null);
            dispTaxiSignAction.putValue("ActionCommandKey", "37");
            dispTaxiSignAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispTaxiSignAction, SettingsEngine.getInstance().getDisplayTWSign());
            menuItemHM.put(new Integer(37), dispTaxiSignAction);
            MenuAction dispTaxiParkAction = new MenuAction("Show Parking Spots", null);
            dispTaxiParkAction.putValue("ActionCommandKey", "38");
            dispTaxiParkAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispTaxiParkAction, SettingsEngine.getInstance().getDisplayParking());
            menuItemHM.put(new Integer(38), dispTaxiParkAction);
            MenuAction dispJetwayAction = new MenuAction("Show Jetways", null);
            dispJetwayAction.putValue("ActionCommandKey", "39");
            dispJetwayAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(74, 3, false));
            dispJetwayAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispJetwayAction, SettingsEngine.getInstance().getDisplayJetways());
            menuItemHM.put(new Integer(39), dispJetwayAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction dispTriggerAction = new MenuAction("Show Fuel Triggers", null);
            dispTriggerAction.putValue("ActionCommandKey", "60");
            dispTriggerAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(70, 3, false));
            dispTriggerAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispTriggerAction, SettingsEngine.getInstance().getDisplayTriggers());
            menuItemHM.put(new Integer(60), dispTriggerAction);
            MenuAction dispSceneryAction = new MenuAction("Show Scenery Objects", null);
            dispSceneryAction.putValue("ActionCommandKey", "61");
            dispSceneryAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispSceneryAction, SettingsEngine.getInstance().getDisplayScenery());
            menuItemHM.put(new Integer(61), dispSceneryAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction dispApronAction = new MenuAction("Show Aprons", null);
            dispApronAction.putValue("ActionCommandKey", "34");
            dispApronAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(65, 3, false));
            dispApronAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispApronAction, SettingsEngine.getInstance().getDisplayApron());
            menuItemHM.put(new Integer(34), dispApronAction);
            MenuAction dispApronELAction = new MenuAction("Show Apron Edge Lights", null);
            dispApronELAction.putValue("ActionCommandKey", "35");
            dispApronELAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispApronELAction, SettingsEngine.getInstance().getDisplayApronEL());
            menuItemHM.put(new Integer(35), dispApronELAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction dispTowerAction = new MenuAction("Show Towers", null);
            dispTowerAction.putValue("ActionCommandKey", "46");
            dispTowerAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(84, 3, false));
            dispTowerAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispTowerAction, SettingsEngine.getInstance().getDisplayTower());
            menuItemHM.put(new Integer(46), dispTowerAction);
            MenuAction dispBoundFenceAction = new MenuAction("Show Boundary Fences", null);
            dispBoundFenceAction.putValue("ActionCommandKey", "47");
            dispBoundFenceAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispBoundFenceAction, SettingsEngine.getInstance().getDisplayBoundFence());
            menuItemHM.put(new Integer(47), dispBoundFenceAction);
            MenuAction dispBlastFenceAction = new MenuAction("Show Blast Fences", null);
            dispBlastFenceAction.putValue("ActionCommandKey", "48");
            dispBlastFenceAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispBlastFenceAction, SettingsEngine.getInstance().getDisplayBlastFence());
            menuItemHM.put(new Integer(48), dispBlastFenceAction);
            MenuAction dispHelipadAction = new MenuAction("Show Helipads", null);
            dispHelipadAction.putValue("ActionCommandKey", "49");
            dispHelipadAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(72, 3, false));
            dispHelipadAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispHelipadAction, SettingsEngine.getInstance().getDisplayHelipad());
            menuItemHM.put(new Integer(49), dispHelipadAction);
            MenuAction dispStartAction = new MenuAction("Show Start Locations", null);
            dispStartAction.putValue("ActionCommandKey", "50");
            dispStartAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispStartAction, SettingsEngine.getInstance().getDisplayStart());
            menuItemHM.put(new Integer(50), dispStartAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction dispLatLonAction = new MenuAction("Show Lat Lon Lines", null);
            dispLatLonAction.putValue("ActionCommandKey", "51");
            dispLatLonAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(76, 3, false));
            dispLatLonAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispLatLonAction, SettingsEngine.getInstance().getDisplayLatLon());
            menuItemHM.put(new Integer(51), dispLatLonAction);
            MenuAction dispExcludeAction = new MenuAction("Show Exclusion Rectangles", null);
            dispExcludeAction.putValue("ActionCommandKey", "52");
            dispExcludeAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(69, 3, false));
            dispExcludeAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispExcludeAction, SettingsEngine.getInstance().getDisplayExcludes());
            menuItemHM.put(new Integer(52), dispExcludeAction);
            MenuAction dispAPCenterAction = new MenuAction("Show Airport Center", null);
            dispAPCenterAction.putValue("ActionCommandKey", "53");
            dispAPCenterAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispAPCenterAction, SettingsEngine.getInstance().getDisplayAirportCtr());
            menuItemHM.put(new Integer(53), dispAPCenterAction);
            MenuAction dispTestRadiusAction = new MenuAction("Show Airport Test Radius", null);
            dispTestRadiusAction.putValue("ActionCommandKey", "54");
            dispTestRadiusAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispTestRadiusAction, SettingsEngine.getInstance().getDisplayTestRadius());
            menuItemHM.put(new Integer(54), dispTestRadiusAction);
            MenuAction dispBGImageAction = new MenuAction("Show Background Image", null);
            dispBGImageAction.putValue("ActionCommandKey", "55");
            dispBGImageAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(66, 3, false));
            dispBGImageAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispBGImageAction, SettingsEngine.getInstance().getDisplayBGImage());
            menuItemHM.put(new Integer(55), dispBGImageAction);
            fsxpMenuBar.addMenuSeparator("Display");
            MenuAction dispMarkerAction = new MenuAction("Show Markers", null);
            dispMarkerAction.putValue("ActionCommandKey", "56");
            dispMarkerAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(77, 3, false));
            dispMarkerAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispMarkerAction, SettingsEngine.getInstance().getDisplayMarkers());
            menuItemHM.put(new Integer(56), dispMarkerAction);
            MenuAction dispNDBAction = new MenuAction("Show NDBs", null);
            dispNDBAction.putValue("ActionCommandKey", "57");
            dispNDBAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(78, 3, false));
            dispNDBAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispNDBAction, SettingsEngine.getInstance().getDisplayNDBs());
            menuItemHM.put(new Integer(57), dispNDBAction);
            MenuAction dispVORAction = new MenuAction("Show VORs", null);
            dispVORAction.putValue("ActionCommandKey", "58");
            dispVORAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(86, 3, false));
            dispVORAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispVORAction, SettingsEngine.getInstance().getDisplayVORs());
            menuItemHM.put(new Integer(58), dispVORAction);
            MenuAction dispWindAction = new MenuAction("Show Windsocks", null);
            dispWindAction.putValue("ActionCommandKey", "59");
            dispWindAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(87, 3, false));
            dispWindAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispWindAction, SettingsEngine.getInstance().getDisplayWindsocks());
            menuItemHM.put(new Integer(59), dispWindAction);
            MenuAction dispRotationAction = new MenuAction("Show Map Rotation", null);
            dispRotationAction.putValue("ActionCommandKey", "62");
            dispRotationAction.putValue("AcceleratorKey", KeyStroke.getKeyStroke(87, 3, false));
            dispRotationAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("Display", dispRotationAction, SettingsEngine.getInstance().getDisplayRotation());
            menuItemHM.put(new Integer(62), dispRotationAction);
            MenuAction prepareAction = new MenuAction("Prepare Options...", null);
            prepareAction.putValue("ActionCommandKey", "63");
            prepareAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Compile", prepareAction);
            menuItemHM.put(new Integer(63), prepareAction);
            MenuAction errorCheckAction = new MenuAction("Error Checking...", null);
            errorCheckAction.putValue("ActionCommandKey", "64");
            errorCheckAction.addMenuListener(listener);
            errorCheckAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", errorCheckAction);
            menuItemHM.put(new Integer(64), errorCheckAction);
            fsxpMenuBar.addMenuSeparator("Compile");
            MenuAction cleanApronAction = new MenuAction("Clean Up Aprons...", null);
            cleanApronAction.putValue("ActionCommandKey", "65");
            cleanApronAction.addMenuListener(listener);
            cleanApronAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", cleanApronAction);
            menuItemHM.put(new Integer(65), cleanApronAction);
            MenuAction cleanFenceAction = new MenuAction("Clean Up Fences...", null);
            cleanFenceAction.putValue("ActionCommandKey", "66");
            cleanFenceAction.addMenuListener(listener);
            cleanFenceAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", cleanFenceAction);
            menuItemHM.put(new Integer(66), cleanFenceAction);
            MenuAction cleanTaxiwayAction = new MenuAction("Clean Up Taxiways...", null);
            cleanTaxiwayAction.putValue("ActionCommandKey", "67");
            cleanTaxiwayAction.addMenuListener(listener);
            cleanTaxiwayAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", cleanTaxiwayAction);
            menuItemHM.put(new Integer(67), cleanTaxiwayAction);
            MenuAction cleanTaxiPointAction = new MenuAction("Clean Up Taxiway Points...", null);
            cleanTaxiPointAction.putValue("ActionCommandKey", "68");
            cleanTaxiPointAction.addMenuListener(listener);
            cleanTaxiPointAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", cleanTaxiPointAction);
            menuItemHM.put(new Integer(68), cleanTaxiPointAction);
            MenuAction cleanAllAction = new MenuAction("Clean Up All...", null);
            cleanAllAction.putValue("ActionCommandKey", "69");
            cleanAllAction.addMenuListener(listener);
            cleanAllAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", cleanAllAction);
            menuItemHM.put(new Integer(69), cleanAllAction);
            fsxpMenuBar.addMenuSeparator("Compile");
            MenuAction compileAction = new MenuAction("Compile To BGL File...", null);
            compileAction.putValue("ActionCommandKey", "70");
            compileAction.addMenuListener(listener);
            compileAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Compile", compileAction);
            menuItemHM.put(new Integer(70), compileAction);
            MenuAction comAction = new MenuAction("COMs", null);
            comAction.putValue("ActionCommandKey", "71");
            comAction.addMenuListener(listener);
            comAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Navigation", comAction);
            menuItemHM.put(new Integer(71), comAction);
            MenuAction approachAction = new MenuAction("Approaches", null);
            approachAction.putValue("ActionCommandKey", "72");
            approachAction.addMenuListener(listener);
            approachAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("Navigation", approachAction);
            menuItemHM.put(new Integer(72), approachAction);
            MenuAction lightsAction = new MenuAction("Display Lighting", null);
            lightsAction.putValue("ActionCommandKey", "73");
            lightsAction.addMenuListener(listener);
            lightsAction.setEnabled(false);
            fsxpMenuBar.addCheckBoxMenuItem("Navigation", lightsAction, SettingsEngine.getInstance().getDisplayLights());
            menuItemHM.put(new Integer(73), lightsAction);
            MenuAction connectFSXAction = new MenuAction("FSX Connection Status...", null);
            connectFSXAction.putValue("ActionCommandKey", "74");
            connectFSXAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("SimConnect", connectFSXAction);
            menuItemHM.put(new Integer(74), connectFSXAction);
            fsxpMenuBar.addMenuSeparator("SimConnect");
            MenuAction cursorMoveAction = new MenuAction("Move Cursor To FSX Plane", null);
            cursorMoveAction.putValue("ActionCommandKey", "75");
            cursorMoveAction.addMenuListener(listener);
            cursorMoveAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("SimConnect", cursorMoveAction);
            menuItemHM.put(new Integer(75), cursorMoveAction);
            MenuAction cursorMoveFSXAction = new MenuAction("Move FSX Plane To Icon", null);
            cursorMoveFSXAction.putValue("ActionCommandKey", "76");
            cursorMoveFSXAction.addMenuListener(listener);
            cursorMoveFSXAction.setEnabled(false);
            fsxpMenuBar.addMenuItem("SimConnect", cursorMoveFSXAction);
            menuItemHM.put(new Integer(76), cursorMoveFSXAction);
            MenuAction cursorPlaneAction = new MenuAction("Move Plane To Here", null);
            cursorPlaneAction.putValue("ActionCommandKey", "77");
            cursorPlaneAction.addMenuListener(listener);
            cursorPlaneAction.setEnabled(false);
            menuItemHM.put(new Integer(77), cursorPlaneAction);
            MenuAction cursorShowAction = new MenuAction("Show Plane", null);
            cursorShowAction.putValue("ActionCommandKey", "78");
            cursorShowAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("SimConnect", cursorShowAction, FSXConnection.getInstance().getShowPlane());
            menuItemHM.put(new Integer(78), cursorShowAction);
            MenuAction followCursorAction = new MenuAction("Follow Cursor", null);
            followCursorAction.putValue("ActionCommandKey", "79");
            followCursorAction.addMenuListener(listener);
            menuItemHM.put(new Integer(79), followCursorAction);
            MenuAction followPlaneAction = new MenuAction("Follow Plane", null);
            followPlaneAction.putValue("ActionCommandKey", "80");
            followPlaneAction.addMenuListener(listener);
            menuItemHM.put(new Integer(80), followPlaneAction);
            MenuAction planeAB321Action = new MenuAction("Airbus 321", null);
            planeAB321Action.putValue("ActionCommandKey", "81");
            planeAB321Action.addMenuListener(listener);
            menuItemHM.put(new Integer(81), planeAB321Action);
            MenuAction planeB737Action = new MenuAction("Boeing 737", null);
            planeB737Action.putValue("ActionCommandKey", "82");
            planeB737Action.addMenuListener(listener);
            menuItemHM.put(new Integer(82), planeB737Action);
            MenuAction planeB747Action = new MenuAction("Boeing 747", null);
            planeB747Action.putValue("ActionCommandKey", "83");
            planeB747Action.addMenuListener(listener);
            menuItemHM.put(new Integer(83), planeB747Action);
            MenuAction planeCRJ700Action = new MenuAction("Bombardier CRJ700", null);
            planeCRJ700Action.putValue("ActionCommandKey", "84");
            planeCRJ700Action.addMenuListener(listener);
            menuItemHM.put(new Integer(84), planeCRJ700Action);
            MenuAction planeLearJetAction = new MenuAction("Bombardier LearJet", null);
            planeLearJetAction.putValue("ActionCommandKey", "85");
            planeLearJetAction.addMenuListener(listener);
            menuItemHM.put(new Integer(85), planeLearJetAction);
            MenuAction planeBaronAction = new MenuAction("Beechcraft Baron 58", null);
            planeBaronAction.putValue("ActionCommandKey", "86");
            planeBaronAction.addMenuListener(listener);
            menuItemHM.put(new Integer(86), planeBaronAction);
            MenuAction planeKingAirAction = new MenuAction("Beechcraft KingAir 350", null);
            planeKingAirAction.putValue("ActionCommandKey", "87");
            planeKingAirAction.addMenuListener(listener);
            menuItemHM.put(new Integer(87), planeKingAirAction);
            MenuAction planeC172Action = new MenuAction("Cessna 172", null);
            planeC172Action.putValue("ActionCommandKey", "88");
            planeC172Action.addMenuListener(listener);
            menuItemHM.put(new Integer(88), planeC172Action);
            MenuAction planeC208Action = new MenuAction("Cessna 208B", null);
            planeC208Action.putValue("ActionCommandKey", "89");
            planeC208Action.addMenuListener(listener);
            menuItemHM.put(new Integer(89), planeC208Action);
            MenuAction planeBeaverAction = new MenuAction("de Havilland Beaver", null);
            planeBeaverAction.putValue("ActionCommandKey", "90");
            planeBeaverAction.addMenuListener(listener);
            menuItemHM.put(new Integer(90), planeBeaverAction);
            MenuAction planeDC3Action = new MenuAction("Douglas DC-3", null);
            planeDC3Action.putValue("ActionCommandKey", "91");
            planeDC3Action.addMenuListener(listener);
            menuItemHM.put(new Integer(91), planeDC3Action);
            MenuAction planeExtraAction = new MenuAction("Extra 300S", null);
            planeExtraAction.putValue("ActionCommandKey", "92");
            planeExtraAction.addMenuListener(listener);
            menuItemHM.put(new Integer(92), planeExtraAction);
            MenuAction planeGooseAction = new MenuAction("Grumman Goose", null);
            planeGooseAction.putValue("ActionCommandKey", "93");
            planeGooseAction.addMenuListener(listener);
            menuItemHM.put(new Integer(93), planeGooseAction);
            MenuAction planeMauleAction = new MenuAction("Maule Orion", null);
            planeMauleAction.putValue("ActionCommandKey", "94");
            planeMauleAction.addMenuListener(listener);
            menuItemHM.put(new Integer(94), planeMauleAction);
            MenuAction planeMooneyAction = new MenuAction("Mooney Bravo", null);
            planeMooneyAction.putValue("ActionCommandKey", "95");
            planeMooneyAction.addMenuListener(listener);
            menuItemHM.put(new Integer(95), planeMooneyAction);
            MenuAction planePiperAction = new MenuAction("Piper Cub", null);
            planePiperAction.putValue("ActionCommandKey", "96");
            planePiperAction.addMenuListener(listener);
            menuItemHM.put(new Integer(96), planePiperAction);
            MenuAction planeBellAction = new MenuAction("Bell Jet Ranger", null);
            planeBellAction.putValue("ActionCommandKey", "97");
            planeBellAction.addMenuListener(listener);
            menuItemHM.put(new Integer(97), planeBellAction);
            MenuAction planeR22Action = new MenuAction("Robinson R22", null);
            planeR22Action.putValue("ActionCommandKey", "98");
            planeR22Action.addMenuListener(listener);
            menuItemHM.put(new Integer(98), planeR22Action);
            MenuAction planeTrikeAction = new MenuAction("AirCreation Trike", null);
            planeTrikeAction.putValue("ActionCommandKey", "99");
            planeTrikeAction.addMenuListener(listener);
            menuItemHM.put(new Integer(99), planeTrikeAction);
            MenuAction planeFlugzeubauAction = new MenuAction("DG Flugzeubau", null);
            planeFlugzeubauAction.putValue("ActionCommandKey", "100");
            planeFlugzeubauAction.addMenuListener(listener);
            menuItemHM.put(new Integer(100), planeFlugzeubauAction);
            MenuAction viewAirportAction = new MenuAction("Airport Data", null);
            viewAirportAction.putValue("ActionCommandKey", "101");
            viewAirportAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("View", viewAirportAction, true);
            menuItemHM.put(new Integer(101), viewAirportAction);
            MenuAction viewObjectAction = new MenuAction("Object Data", null);
            viewObjectAction.putValue("ActionCommandKey", "102");
            viewObjectAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("View", viewObjectAction, true);
            menuItemHM.put(new Integer(102), viewObjectAction);
            MenuAction viewNavAction = new MenuAction("Navigation Toolbar", null);
            viewNavAction.putValue("ActionCommandKey", "103");
            viewNavAction.addMenuListener(listener);
            fsxpMenuBar.addCheckBoxMenuItem("View", viewNavAction, false);
            menuItemHM.put(new Integer(103), viewNavAction);
            fsxpMenuBar.addMenuSeparator("View");
            MenuAction donateAction = new MenuAction("Instant Karma", null);
            donateAction.putValue("ActionCommandKey", "104");
            donateAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", donateAction);
            menuItemHM.put(new Integer(104), donateAction);
            fsxpMenuBar.addMenuSeparator("Help");
            MenuAction helpBasicsAction = new MenuAction("The Basics", null);
            helpBasicsAction.putValue("ActionCommandKey", "105");
            helpBasicsAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpBasicsAction);
            menuItemHM.put(new Integer(105), helpBasicsAction);
            MenuAction helpBGLAction = new MenuAction("Opening BGL Files", null);
            helpBGLAction.putValue("ActionCommandKey", "106");
            helpBGLAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpBGLAction);
            menuItemHM.put(new Integer(106), helpBGLAction);
            MenuAction helpCompileAction = new MenuAction("Compiling Your Airport", null);
            helpCompileAction.putValue("ActionCommandKey", "107");
            helpCompileAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpCompileAction);
            menuItemHM.put(new Integer(107), helpCompileAction);
            MenuAction helpSimConnectAction = new MenuAction("Connecting to FSX", null);
            helpSimConnectAction.putValue("ActionCommandKey", "108");
            helpSimConnectAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpSimConnectAction);
            menuItemHM.put(new Integer(108), helpSimConnectAction);
            fsxpMenuBar.addMenuSeparator("Help");
            MenuAction helpApronsAction = new MenuAction("Creating and Editing Aprons", null);
            helpApronsAction.putValue("ActionCommandKey", "109");
            helpApronsAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpApronsAction);
            menuItemHM.put(new Integer(109), helpApronsAction);
            MenuAction helpTaxiwayAction = new MenuAction("Creating and Editing Taxiways", null);
            helpTaxiwayAction.putValue("ActionCommandKey", "110");
            helpTaxiwayAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpTaxiwayAction);
            menuItemHM.put(new Integer(110), helpTaxiwayAction);
            MenuAction helpSignAction = new MenuAction("Creating and Editing Taxiway Signs", null);
            helpSignAction.putValue("ActionCommandKey", "111");
            helpSignAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpSignAction);
            menuItemHM.put(new Integer(111), helpSignAction);
            MenuAction helpRefuelAction = new MenuAction("Creating and Editing Refueling Locations", null);
            helpRefuelAction.putValue("ActionCommandKey", "112");
            helpRefuelAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpRefuelAction);
            menuItemHM.put(new Integer(112), helpRefuelAction);
            MenuAction helpBackgroundAction = new MenuAction("Working with Background Images", null);
            helpBackgroundAction.putValue("ActionCommandKey", "113");
            helpBackgroundAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpBackgroundAction);
            menuItemHM.put(new Integer(113), helpBackgroundAction);
            fsxpMenuBar.addMenuSeparator("Help");
            MenuAction helpMoreAction = new MenuAction("More Help Options", null);
            helpMoreAction.putValue("ActionCommandKey", "114");
            helpMoreAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Help", helpMoreAction);
            menuItemHM.put(new Integer(114), helpMoreAction);
            MenuAction insSelectAction = new MenuAction("Select Objects", IconFactory.getInstance().getIcon("select"));
            insSelectAction.putValue("ActionCommandKey", "115");
            insSelectAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Scenery", insSelectAction);
            menuItemHM.put(new Integer(115), insSelectAction);
            MenuAction insScrollAction = new MenuAction("Scroll", IconFactory.getInstance().getIcon("scroll"));
            insScrollAction.putValue("ActionCommandKey", "116");
            insScrollAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Scenery", insScrollAction);
            menuItemHM.put(new Integer(116), insScrollAction);
            MenuAction insZoomInAction = new MenuAction("Zoom In", IconFactory.getInstance().getIcon("zoomIn"));
            insZoomInAction.putValue("ActionCommandKey", "117");
            insZoomInAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Scenery", insZoomInAction);
            menuItemHM.put(new Integer(117), insZoomInAction);
            MenuAction insZoomOutAction = new MenuAction("Zoom Out", IconFactory.getInstance().getIcon("zoomOut"));
            insZoomOutAction.putValue("ActionCommandKey", "118");
            insZoomOutAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Scenery", insZoomOutAction);
            menuItemHM.put(new Integer(118), insZoomOutAction);
            MenuAction insParking1Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking1Action.putValue("ActionCommandKey", "119");
            insParking1Action.addMenuListener(listener);
            menuItemHM.put(new Integer(119), insParking1Action);
            MenuAction insParking2Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking2Action.putValue("ActionCommandKey", "120");
            insParking2Action.addMenuListener(listener);
            menuItemHM.put(new Integer(120), insParking2Action);
            MenuAction insParking3Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking3Action.putValue("ActionCommandKey", "121");
            insParking3Action.addMenuListener(listener);
            menuItemHM.put(new Integer(121), insParking3Action);
            MenuAction insParking4Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking4Action.putValue("ActionCommandKey", "122");
            insParking4Action.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Scenery", insParking4Action);
            menuItemHM.put(new Integer(122), insParking4Action);
            MenuAction insParking5Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking5Action.putValue("ActionCommandKey", "123");
            insParking5Action.addMenuListener(listener);
            menuItemHM.put(new Integer(123), insParking5Action);
            MenuAction insParking6Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking6Action.putValue("ActionCommandKey", "124");
            insParking6Action.addMenuListener(listener);
            menuItemHM.put(new Integer(124), insParking6Action);
            MenuAction insParking7Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking7Action.putValue("ActionCommandKey", "125");
            insParking7Action.addMenuListener(listener);
            menuItemHM.put(new Integer(125), insParking7Action);
            MenuAction insParking8Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking8Action.putValue("ActionCommandKey", "126");
            insParking8Action.addMenuListener(listener);
            menuItemHM.put(new Integer(126), insParking8Action);
            MenuAction insParking9Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking9Action.putValue("ActionCommandKey", "127");
            insParking9Action.addMenuListener(listener);
            menuItemHM.put(new Integer(127), insParking9Action);
            MenuAction insParking10Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking10Action.putValue("ActionCommandKey", "128");
            insParking10Action.addMenuListener(listener);
            menuItemHM.put(new Integer(128), insParking10Action);
            MenuAction insParking11Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking11Action.putValue("ActionCommandKey", "129");
            insParking11Action.addMenuListener(listener);
            menuItemHM.put(new Integer(129), insParking11Action);
            MenuAction insParking12Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking12Action.putValue("ActionCommandKey", "130");
            insParking12Action.addMenuListener(listener);
            menuItemHM.put(new Integer(130), insParking12Action);
            MenuAction insParking13Action = new MenuAction("Insert Parking Spots", IconFactory.getInstance().getIcon("parking"));
            insParking13Action.putValue("ActionCommandKey", "131");
            insParking13Action.addMenuListener(listener);
            menuItemHM.put(new Integer(131), insParking13Action);
            MenuAction insStartPointAction = new MenuAction("Insert Start Point", IconFactory.getInstance().getIcon("startPoint"));
            insStartPointAction.putValue("ActionCommandKey", "132");
            insStartPointAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insStartPointAction);
            menuItemHM.put(new Integer(132), insStartPointAction);
            MenuAction insTowerAction = new MenuAction("Insert Tower", IconFactory.getInstance().getIcon("tower"));
            insTowerAction.putValue("ActionCommandKey", "133");
            insTowerAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insTowerAction);
            menuItemHM.put(new Integer(133), insTowerAction);
            MenuAction insTaxiPointAction = new MenuAction("Insert Taxiway Point", IconFactory.getInstance().getIcon("taxiPoint"));
            insTaxiPointAction.putValue("ActionCommandKey", "134");
            insTaxiPointAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insTaxiPointAction);
            menuItemHM.put(new Integer(134), insTaxiPointAction);
            MenuAction insILSTaxiPointAction = new MenuAction("Insert ILS Taxiway Point", IconFactory.getInstance().getIcon("ilsTaxiPoint"));
            insILSTaxiPointAction.putValue("ActionCommandKey", "135");
            insILSTaxiPointAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insILSTaxiPointAction);
            menuItemHM.put(new Integer(135), insILSTaxiPointAction);
            MenuAction insHSTaxiPointAction = new MenuAction("Insert Hold Short Taxiway Point", IconFactory.getInstance().getIcon("hsTaxiPoint"));
            insHSTaxiPointAction.putValue("ActionCommandKey", "136");
            insHSTaxiPointAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insHSTaxiPointAction);
            menuItemHM.put(new Integer(136), insHSTaxiPointAction);
            MenuAction insTaxiwaySignAction = new MenuAction("Insert Taxiway Sign", IconFactory.getInstance().getIcon("taxiwaySign"));
            insTaxiwaySignAction.putValue("ActionCommandKey", "137");
            insTaxiwaySignAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insTaxiwaySignAction);
            menuItemHM.put(new Integer(137), insTaxiwaySignAction);
            MenuAction insApronELAction = new MenuAction("Insert Apron Edge Light", IconFactory.getInstance().getIcon("apronEdgeLight"));
            insApronELAction.putValue("ActionCommandKey", "138");
            insApronELAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insApronELAction);
            menuItemHM.put(new Integer(138), insApronELAction);
            MenuAction insHelipadAction = new MenuAction("Insert Helipad", IconFactory.getInstance().getIcon("helipad"));
            insHelipadAction.putValue("ActionCommandKey", "139");
            insHelipadAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insHelipadAction);
            menuItemHM.put(new Integer(139), insHelipadAction);
            MenuAction insTaxiway1Action = new MenuAction("Insert Taxiway", IconFactory.getInstance().getIcon("taxiway"));
            insTaxiway1Action.putValue("ActionCommandKey", "140");
            insTaxiway1Action.addMenuListener(listener);
            menuItemHM.put(new Integer(140), insTaxiway1Action);
            MenuAction insTaxiway2Action = new MenuAction("Insert Taxiway", IconFactory.getInstance().getIcon("taxiway"));
            insTaxiway2Action.putValue("ActionCommandKey", "141");
            insTaxiway2Action.addMenuListener(listener);
            menuItemHM.put(new Integer(141), insTaxiway2Action);
            MenuAction insTaxiway3Action = new MenuAction("Insert Taxiway", IconFactory.getInstance().getIcon("taxiway"));
            insTaxiway3Action.putValue("ActionCommandKey", "142");
            insTaxiway3Action.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insTaxiway3Action);
            menuItemHM.put(new Integer(142), insTaxiway3Action);
            MenuAction insTaxiway4Action = new MenuAction("Insert Taxiway", IconFactory.getInstance().getIcon("taxiway"));
            insTaxiway4Action.putValue("ActionCommandKey", "143");
            insTaxiway4Action.addMenuListener(listener);
            menuItemHM.put(new Integer(143), insTaxiway4Action);
            MenuAction insTaxiway5Action = new MenuAction("Insert Taxiway", IconFactory.getInstance().getIcon("taxiway"));
            insTaxiway5Action.putValue("ActionCommandKey", "144");
            insTaxiway5Action.addMenuListener(listener);
            menuItemHM.put(new Integer(144), insTaxiway5Action);
            MenuAction insTaxiway6Action = new MenuAction("Insert Taxiway", IconFactory.getInstance().getIcon("taxiway"));
            insTaxiway6Action.putValue("ActionCommandKey", "145");
            insTaxiway6Action.addMenuListener(listener);
            menuItemHM.put(new Integer(145), insTaxiway6Action);
            MenuAction insApronAction = new MenuAction("Insert Apron", IconFactory.getInstance().getIcon("apron"));
            insApronAction.putValue("ActionCommandKey", "146");
            insApronAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insApronAction);
            menuItemHM.put(new Integer(146), insApronAction);
            MenuAction insRunway1Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway1Action.putValue("ActionCommandKey", "147");
            insRunway1Action.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insRunway1Action);
            menuItemHM.put(new Integer(147), insRunway1Action);
            MenuAction insRunway2Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway2Action.putValue("ActionCommandKey", "148");
            insRunway2Action.addMenuListener(listener);
            menuItemHM.put(new Integer(148), insRunway2Action);
            MenuAction insRunway3Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway3Action.putValue("ActionCommandKey", "149");
            insRunway3Action.addMenuListener(listener);
            menuItemHM.put(new Integer(149), insRunway3Action);
            MenuAction insRunway4Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway4Action.putValue("ActionCommandKey", "150");
            insRunway4Action.addMenuListener(listener);
            menuItemHM.put(new Integer(150), insRunway4Action);
            MenuAction insRunway5Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway5Action.putValue("ActionCommandKey", "151");
            insRunway5Action.addMenuListener(listener);
            menuItemHM.put(new Integer(151), insRunway5Action);
            MenuAction insRunway6Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway6Action.putValue("ActionCommandKey", "152");
            insRunway6Action.addMenuListener(listener);
            menuItemHM.put(new Integer(152), insRunway6Action);
            MenuAction insRunway7Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway7Action.putValue("ActionCommandKey", "153");
            insRunway7Action.addMenuListener(listener);
            menuItemHM.put(new Integer(153), insRunway7Action);
            MenuAction insRunway8Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway8Action.putValue("ActionCommandKey", "154");
            insRunway8Action.addMenuListener(listener);
            menuItemHM.put(new Integer(154), insRunway8Action);
            MenuAction insRunway9Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway9Action.putValue("ActionCommandKey", "155");
            insRunway9Action.addMenuListener(listener);
            menuItemHM.put(new Integer(155), insRunway9Action);
            MenuAction insRunway10Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway10Action.putValue("ActionCommandKey", "156");
            insRunway10Action.addMenuListener(listener);
            menuItemHM.put(new Integer(156), insRunway10Action);
            MenuAction insRunway11Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway11Action.putValue("ActionCommandKey", "157");
            insRunway11Action.addMenuListener(listener);
            menuItemHM.put(new Integer(157), insRunway11Action);
            MenuAction insRunway12Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway12Action.putValue("ActionCommandKey", "158");
            insRunway12Action.addMenuListener(listener);
            menuItemHM.put(new Integer(158), insRunway12Action);
            MenuAction insRunway13Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway13Action.putValue("ActionCommandKey", "159");
            insRunway13Action.addMenuListener(listener);
            menuItemHM.put(new Integer(159), insRunway13Action);
            MenuAction insRunway14Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway14Action.putValue("ActionCommandKey", "160");
            insRunway14Action.addMenuListener(listener);
            menuItemHM.put(new Integer(160), insRunway14Action);
            MenuAction insRunway15Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway15Action.putValue("ActionCommandKey", "161");
            insRunway15Action.addMenuListener(listener);
            menuItemHM.put(new Integer(161), insRunway15Action);
            MenuAction insRunway16Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway16Action.putValue("ActionCommandKey", "162");
            insRunway16Action.addMenuListener(listener);
            menuItemHM.put(new Integer(162), insRunway16Action);
            MenuAction insRunway17Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway17Action.putValue("ActionCommandKey", "163");
            insRunway17Action.addMenuListener(listener);
            menuItemHM.put(new Integer(163), insRunway17Action);
            MenuAction insRunway18Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway18Action.putValue("ActionCommandKey", "164");
            insRunway18Action.addMenuListener(listener);
            menuItemHM.put(new Integer(164), insRunway18Action);
            MenuAction insRunway19Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway19Action.putValue("ActionCommandKey", "165");
            insRunway19Action.addMenuListener(listener);
            menuItemHM.put(new Integer(165), insRunway19Action);
            MenuAction insRunway20Action = new MenuAction("Insert Runway", IconFactory.getInstance().getIcon("runway"));
            insRunway20Action.putValue("ActionCommandKey", "166");
            insRunway20Action.addMenuListener(listener);
            menuItemHM.put(new Integer(166), insRunway20Action);
            MenuAction insFence1Action = new MenuAction("Insert Boundary Fence", IconFactory.getInstance().getIcon("fence"));
            insFence1Action.putValue("ActionCommandKey", "167");
            insFence1Action.addMenuListener(listener);
            menuItemHM.put(new Integer(167), insFence1Action);
            MenuAction insFence2Action = new MenuAction("Insert Boundary Fence", IconFactory.getInstance().getIcon("fence"));
            insFence2Action.putValue("ActionCommandKey", "168");
            insFence2Action.addMenuListener(listener);
            menuItemHM.put(new Integer(168), insFence2Action);
            MenuAction insFence3Action = new MenuAction("Insert Boundary Fence", IconFactory.getInstance().getIcon("fence"));
            insFence3Action.putValue("ActionCommandKey", "169");
            insFence3Action.addMenuListener(listener);
            menuItemHM.put(new Integer(169), insFence3Action);
            MenuAction insFence4Action = new MenuAction("Insert Boundary Fence", IconFactory.getInstance().getIcon("fence"));
            insFence4Action.putValue("ActionCommandKey", "170");
            insFence4Action.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insFence4Action);
            menuItemHM.put(new Integer(170), insFence4Action);
            MenuAction insFence5Action = new MenuAction("Insert Boundary Fence", IconFactory.getInstance().getIcon("fence"));
            insFence5Action.putValue("ActionCommandKey", "171");
            insFence5Action.addMenuListener(listener);
            menuItemHM.put(new Integer(171), insFence5Action);
            MenuAction insBFence1Action = new MenuAction("Insert Blast Fence", IconFactory.getInstance().getIcon("blastFence"));
            insBFence1Action.putValue("ActionCommandKey", "172");
            insBFence1Action.addMenuListener(listener);
            menuItemHM.put(new Integer(172), insBFence1Action);
            MenuAction insBFence2Action = new MenuAction("Insert Blast Fence", IconFactory.getInstance().getIcon("blastFence"));
            insBFence2Action.putValue("ActionCommandKey", "173");
            insBFence2Action.addMenuListener(listener);
            menuItemHM.put(new Integer(173), insBFence2Action);
            MenuAction insBFence3Action = new MenuAction("Insert Blast Fence", IconFactory.getInstance().getIcon("blastFence"));
            insBFence3Action.putValue("ActionCommandKey", "174");
            insBFence3Action.addMenuListener(listener);
            menuItemHM.put(new Integer(174), insBFence3Action);
            MenuAction insBFence4Action = new MenuAction("Insert Blast Fence", IconFactory.getInstance().getIcon("blastFence"));
            insBFence4Action.putValue("ActionCommandKey", "175");
            insBFence4Action.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insBFence4Action);
            menuItemHM.put(new Integer(175), insBFence4Action);
            MenuAction insBFence5Action = new MenuAction("Insert Blast Fence", IconFactory.getInstance().getIcon("blastFence"));
            insBFence5Action.putValue("ActionCommandKey", "176");
            insBFence5Action.addMenuListener(listener);
            menuItemHM.put(new Integer(176), insBFence5Action);
            MenuAction insJetwayAction = new MenuAction("Insert Jetway", IconFactory.getInstance().getIcon("jetway"));
            insJetwayAction.putValue("ActionCommandKey", "177");
            insJetwayAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insJetwayAction);
            menuItemHM.put(new Integer(177), insJetwayAction);
            MenuAction insILSAction = new MenuAction("Insert ILS", IconFactory.getInstance().getIcon("ilsBeam"));
            insILSAction.putValue("ActionCommandKey", "178");
            insILSAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insILSAction);
            menuItemHM.put(new Integer(178), insILSAction);
            MenuAction insMarkerAction = new MenuAction("Insert Marker", IconFactory.getInstance().getIcon("marker"));
            insMarkerAction.putValue("ActionCommandKey", "179");
            insMarkerAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insMarkerAction);
            menuItemHM.put(new Integer(179), insMarkerAction);
            MenuAction insVORAction = new MenuAction("Insert VOR", IconFactory.getInstance().getIcon("vor"));
            insVORAction.putValue("ActionCommandKey", "180");
            insVORAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insVORAction);
            menuItemHM.put(new Integer(180), insVORAction);
            MenuAction insNDBAction = new MenuAction("Insert NDB", IconFactory.getInstance().getIcon("ndb"));
            insNDBAction.putValue("ActionCommandKey", "181");
            insNDBAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insNDBAction);
            menuItemHM.put(new Integer(181), insNDBAction);
            MenuAction insWindsockAction = new MenuAction("Insert Windsock", IconFactory.getInstance().getIcon("windsock"));
            insWindsockAction.putValue("ActionCommandKey", "182");
            insWindsockAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insWindsockAction);
            menuItemHM.put(new Integer(182), insWindsockAction);
            MenuAction insExcludeAction = new MenuAction("Insert Exclusion Rectangle", IconFactory.getInstance().getIcon("exclude"));
            insExcludeAction.putValue("ActionCommandKey", "183");
            insExcludeAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insExcludeAction);
            menuItemHM.put(new Integer(183), insExcludeAction);
            MenuAction insTriggerAction = new MenuAction("Insert Fuel Trigger", IconFactory.getInstance().getIcon("fuel"));
            insTriggerAction.putValue("ActionCommandKey", "184");
            insTriggerAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insTriggerAction);
            menuItemHM.put(new Integer(184), insTriggerAction);
            MenuAction insSceneryAction = new MenuAction("Insert Scenery", IconFactory.getInstance().getIcon("scenery"));
            insSceneryAction.putValue("ActionCommandKey", "185");
            insSceneryAction.addMenuListener(listener);
            fsxpMenuBar.addMenuItem("Insert", insSceneryAction);
            menuItemHM.put(new Integer(185), insSceneryAction);
            MenuAction historyDetailsAction = new MenuAction("Display Details", null);
            historyDetailsAction.putValue("ActionCommandKey", "186");
            historyDetailsAction.addMenuListener(listener);
            menuItemHM.put(new Integer(186), historyDetailsAction);
            MenuAction historyUndoAction = new MenuAction("Undo Item", null);
            historyUndoAction.putValue("ActionCommandKey", "187");
            historyUndoAction.addMenuListener(listener);
            menuItemHM.put(new Integer(187), historyUndoAction);
            MenuAction breakFenceMI = new MenuAction("Break Fence After Here", null);
            breakFenceMI.putValue("ActionCommandKey", "188");
            breakFenceMI.addMenuListener(listener);
            menuItemHM.put(new Integer(188), breakFenceMI);
            MenuAction primaryILSMI = new MenuAction("Add Primary ILS", null);
            primaryILSMI.putValue("ActionCommandKey", "189");
            primaryILSMI.addMenuListener(listener);
            menuItemHM.put(new Integer(189), primaryILSMI);
            MenuAction secondaryILSMI = new MenuAction("Add Secondary ILS", null);
            secondaryILSMI.putValue("ActionCommandKey", "190");
            secondaryILSMI.addMenuListener(listener);
            menuItemHM.put(new Integer(190), secondaryILSMI);
            MenuAction addTriggerMI = new MenuAction("Add Fuel Trigger", null);
            addTriggerMI.putValue("ActionCommandKey", "191");
            addTriggerMI.addMenuListener(listener);
            menuItemHM.put(new Integer(191), addTriggerMI);
            MenuAction addStationMI = new MenuAction("Add Fuel Station", null);
            addStationMI.putValue("ActionCommandKey", "192");
            addStationMI.addMenuListener(listener);
            menuItemHM.put(new Integer(192), addStationMI);
            MenuAction addLocalizerMI = new MenuAction("Add Localizer Array", null);
            addLocalizerMI.putValue("ActionCommandKey", "193");
            addLocalizerMI.addMenuListener(listener);
            menuItemHM.put(new Integer(193), addLocalizerMI);
            MenuAction addVORStationMI = new MenuAction("Add VOR Station", null);
            addVORStationMI.putValue("ActionCommandKey", "194");
            addVORStationMI.addMenuListener(listener);
            menuItemHM.put(new Integer(194), addVORStationMI);
            MenuAction addNDBAntennaMI = new MenuAction("Add NDB Antenna", null);
            addNDBAntennaMI.putValue("ActionCommandKey", "195");
            addNDBAntennaMI.addMenuListener(listener);
            menuItemHM.put(new Integer(195), addNDBAntennaMI);
            return;
        }
    }

    private HashMap menuHM;
    private HashMap menuItemHM;
    private MenuActionListener listener;
    public static MenuFactory menuFactory = null;

}
